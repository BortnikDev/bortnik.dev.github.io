{"ast":null,"code":"var _jsxFileName = \"/Applications/Git/Samuel Bortnik/RecipeApp/RecipeApp/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipeContext from '../context/RecipeContext';\nimport '../css/Header.css';\nimport { fetchRecipes } from '../services/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n  const {\n    setRecipes\n  } = useContext(RecipeContext);\n  const {\n    pathname\n  } = useLocation();\n  const [typeSearch, setTypeSearch] = useState('ingredient');\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const searchRecipe = async () => {\n    const recipesList = await fetchRecipes(pathname, typeSearch, search);\n    if (typeSearch === 'first-letter' && search.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    }\n    if (recipesList && recipesList.length === 1) {\n      const enpoint = pathname === '/meals' ? 'idMeal' : 'idDrink';\n      history.push(`${pathname}/${recipesList[0][enpoint]}`);\n    }\n    if (recipesList === null) {\n      global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n    }\n    setRecipes(recipesList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search__bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"search-input\",\n      value: search,\n      onChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setSearch(target.value);\n      },\n      placeholder: \"Search for a recipe\",\n      className: \"input__search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredient\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ingredient\",\n          value: \"ingredient\",\n          \"data-testid\": \"ingredient-search-radio\",\n          name: \"search\",\n          type: \"radio\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setTypeSearch(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \"Ingredient\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          value: \"name\",\n          \"data-testid\": \"name-search-radio\",\n          name: \"search\",\n          type: \"radio\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setTypeSearch(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \"Name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first-letter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"first-letter\",\n          value: \"first-letter\",\n          \"data-testid\": \"first-letter-search-radio\",\n          name: \"search\",\n          type: \"radio\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setTypeSearch(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \"First letter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"exec-search-btn\",\n      onClick: searchRecipe,\n      className: \"button__search\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"Sl+KMK51xgU5MEeQ8q2GtnNn0vY=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useContext","useState","useHistory","useLocation","RecipeContext","fetchRecipes","SearchBar","setRecipes","pathname","typeSearch","setTypeSearch","search","setSearch","history","searchRecipe","recipesList","length","global","alert","enpoint","push","target","value"],"sources":["/Applications/Git/Samuel Bortnik/RecipeApp/RecipeApp/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipeContext from '../context/RecipeContext';\nimport '../css/Header.css';\nimport { fetchRecipes } from '../services/fetchAPI';\n\nexport default function SearchBar() {\n  const { setRecipes } = useContext(RecipeContext);\n  const { pathname } = useLocation();\n  const [typeSearch, setTypeSearch] = useState('ingredient');\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n\n  const searchRecipe = async () => {\n    const recipesList = await fetchRecipes(pathname, typeSearch, search);\n    if (typeSearch === 'first-letter' && search.length > 1) {\n      global.alert('Your search must have only 1 (one) character');\n    }\n    if (recipesList && recipesList.length === 1) {\n      const enpoint = pathname === '/meals' ? 'idMeal' : 'idDrink';\n      history.push(`${pathname}/${recipesList[0][enpoint]}`);\n    }\n    if (recipesList === null) {\n      global.alert('Sorry, we haven\\'t found any recipes for these filters.');\n    }\n    setRecipes(recipesList);\n  };\n\n  return (\n    <div className=\"search__bar\">\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ search }\n        onChange={ ({ target }) => setSearch(target.value) }\n        placeholder=\"Search for a recipe\"\n        className=\"input__search\"\n      />\n      <div className=\"checkbox__container\">\n        <label htmlFor=\"ingredient\">\n          <input\n            id=\"ingredient\"\n            value=\"ingredient\"\n            data-testid=\"ingredient-search-radio\"\n            name=\"search\"\n            type=\"radio\"\n            onChange={ ({ target }) => setTypeSearch(target.value) }\n          />\n          Ingredient\n        </label>\n\n        <label htmlFor=\"name\">\n          <input\n            id=\"name\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            name=\"search\"\n            type=\"radio\"\n            onChange={ ({ target }) => setTypeSearch(target.value) }\n          />\n          Name\n        </label>\n\n        <label htmlFor=\"first-letter\">\n          <input\n            id=\"first-letter\"\n            value=\"first-letter\"\n            data-testid=\"first-letter-search-radio\"\n            name=\"search\"\n            type=\"radio\"\n            onChange={ ({ target }) => setTypeSearch(target.value) }\n          />\n          First letter\n        </label>\n      </div>\n\n      <button\n        data-testid=\"exec-search-btn\"\n        onClick={ searchRecipe }\n        className=\"button__search\"\n      >\n        Search\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}