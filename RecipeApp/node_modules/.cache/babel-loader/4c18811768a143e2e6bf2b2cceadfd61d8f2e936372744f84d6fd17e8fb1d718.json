{"ast":null,"code":"export const fetchMeals = async (type, search) => {\n  let url = '';\n  switch (type) {\n    case 'ingredient':\n      url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${search}`;\n      break;\n    case 'name':\n      url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`;\n      break;\n    case 'first-letter':\n      url = `https://www.themealdb.com/api/json/v1/1/search.php?f=${search}`;\n      break;\n    default:\n      url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchDrinks = async (type, search) => {\n  let url = '';\n  switch (type) {\n    case 'ingredient':\n      url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${search}`;\n      break;\n    case 'name':\n      url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${search}`;\n      break;\n    case 'first-letter':\n      url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${search}`;\n      break;\n    default:\n      url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.drinks;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchRecipes = async (pathname, type, search) => {\n  let recipes;\n  if (pathname === '/meals') {\n    recipes = await fetchMeals(type, search);\n  } else {\n    recipes = await fetchDrinks(type, search);\n  }\n  return recipes;\n};\nconst maxNumber = 5;\nexport const fetchAllCategories = async endpoint => {\n  try {\n    if (endpoint.includes('/meals')) {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const data = await response.json();\n      return data.meals.slice(0, maxNumber);\n    }\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    const data = await response.json();\n    return data.drinks.slice(0, maxNumber);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMealByCategory = async category => {\n  let url = '';\n  if (category === 'All') {\n    url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  } else {\n    url = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.meals;\n};\nexport const fetchDrinkByCategory = async category => {\n  let url = '';\n  if (category === 'All') {\n    url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  } else {\n    url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.drinks;\n};\nexport const fetchRecipeByCategory = async (pathname, category) => {\n  let recipeByCategory;\n  if (pathname === '/meals') {\n    recipeByCategory = await fetchMealByCategory(category);\n  } else {\n    recipeByCategory = await fetchDrinkByCategory(category);\n  }\n  return recipeByCategory;\n};\nexport const getRecipesId = async (id, endpoint) => {\n  try {\n    if (endpoint.includes('/meals')) {\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const result = await fetch(URL);\n      const data = await result.json();\n      return data.meals[0];\n    }\n    const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const result = await fetch(URL);\n    const data = await result.json();\n    return data.drinks[0];\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["fetchMeals","type","search","url","response","fetch","data","json","meals","error","console","log","fetchDrinks","drinks","fetchRecipes","pathname","recipes","maxNumber","fetchAllCategories","endpoint","includes","slice","fetchMealByCategory","category","fetchDrinkByCategory","fetchRecipeByCategory","recipeByCategory","getRecipesId","id","URL","result"],"sources":["/Applications/Git/trybe github/trybe/projetos/projeto-app-receita/sd-030-a-project-recipes-app/src/services/fetchAPI.js"],"sourcesContent":["export const fetchMeals = async (type, search) => {\n  let url = '';\n  switch (type) {\n  case 'ingredient':\n    url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${search}`;\n    break;\n  case 'name':\n    url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`;\n    break;\n  case 'first-letter':\n    url = `https://www.themealdb.com/api/json/v1/1/search.php?f=${search}`;\n    break;\n  default:\n    url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDrinks = async (type, search) => {\n  let url = '';\n  switch (type) {\n  case 'ingredient':\n    url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${search}`;\n    break;\n  case 'name':\n    url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${search}`;\n    break;\n  case 'first-letter':\n    url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${search}`;\n    break;\n  default:\n    url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  }\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.drinks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchRecipes = async (pathname, type, search) => {\n  let recipes;\n  if (pathname === '/meals') {\n    recipes = await fetchMeals(type, search);\n  } else {\n    recipes = await fetchDrinks(type, search);\n  }\n  return recipes;\n};\n\nconst maxNumber = 5;\n\nexport const fetchAllCategories = async (endpoint) => {\n  try {\n    if (endpoint.includes('/meals')) {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const data = await response.json();\n      return data.meals.slice(0, maxNumber);\n    }\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    const data = await response.json();\n    return data.drinks.slice(0, maxNumber);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMealByCategory = async (category) => {\n  let url = '';\n  if (category === 'All') {\n    url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  } else {\n    url = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.meals;\n};\n\nexport const fetchDrinkByCategory = async (category) => {\n  let url = '';\n  if (category === 'All') {\n    url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  } else {\n    url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.drinks;\n};\n\nexport const fetchRecipeByCategory = async (pathname, category) => {\n  let recipeByCategory;\n  if (pathname === '/meals') {\n    recipeByCategory = await fetchMealByCategory(category);\n  } else {\n    recipeByCategory = await fetchDrinkByCategory(category);\n  }\n  return recipeByCategory;\n};\n\nexport const getRecipesId = async (id, endpoint) => {\n  try {\n    if (endpoint.includes('/meals')) {\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const result = await fetch(URL);\n      const data = await result.json();\n      return (data.meals[0]);\n    }\n    const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n    const result = await fetch(URL);\n    const data = await result.json();\n    return (data.drinks[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}