{"ast":null,"code":"var _jsxFileName = \"/Applications/Git/Samuel Bortnik/RecipeApp/RecipeApp/src/components/ButtonFavorite.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipeContext from '../context/RecipeContext';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonFavorite() {\n  _s();\n  const {\n    recipe\n  } = useContext(RecipeContext);\n  const [favorite, setFavorite] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n  const verifyFavorite = useCallback(() => {\n    const favoritesStorage = localStorage.getItem('favoriteRecipes');\n    if (favoritesStorage && favoritesStorage.includes(id)) {\n      setFavorite(true);\n    }\n  }, [id, setFavorite]);\n  useEffect(() => {\n    verifyFavorite();\n  }, [verifyFavorite]);\n  const favoriteRecipe = () => {\n    const favoritesStorage = localStorage.getItem('favoriteRecipes');\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const fave = {\n      id: recipe.idDrink || recipe.idMeal,\n      type: pathname.includes('/drinks') ? 'drink' : 'meal',\n      nationality: recipe.strArea || '',\n      category: recipe.strCategory || '',\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe.strDrink || recipe.strMeal,\n      image: recipe.strDrinkThumb || recipe.strMealThumb\n    };\n    if (!favoritesStorage || !favoritesStorage.includes(id)) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favorites, fave]));\n      setFavorite(true);\n    } else {\n      const removeRecipe = favorites.filter(recipeFav => recipeFav.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(removeRecipe));\n      setFavorite(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"favorite-btn\",\n      onClick: favoriteRecipe,\n      src: favorite ? blackHeartIcon : whiteHeartIcon,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: favorite ? blackHeartIcon : whiteHeartIcon,\n        alt: \"favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ButtonFavorite, \"GQJVCqoxJlJ/LO57OoJOjYph42c=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = ButtonFavorite;\nvar _c;\n$RefreshReg$(_c, \"ButtonFavorite\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","useLocation","useParams","RecipeContext","blackHeartIcon","whiteHeartIcon","ButtonFavorite","recipe","favorite","setFavorite","pathname","id","verifyFavorite","favoritesStorage","localStorage","getItem","includes","favoriteRecipe","favorites","JSON","parse","fave","idDrink","idMeal","type","nationality","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","strMeal","image","strDrinkThumb","strMealThumb","setItem","stringify","removeRecipe","filter","recipeFav"],"sources":["/Applications/Git/Samuel Bortnik/RecipeApp/RecipeApp/src/components/ButtonFavorite.jsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport RecipeContext from '../context/RecipeContext';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nexport default function ButtonFavorite() {\n  const { recipe } = useContext(RecipeContext);\n\n  const [favorite, setFavorite] = useState(false);\n\n  const { pathname } = useLocation();\n  const { id } = useParams();\n\n  const verifyFavorite = useCallback(() => {\n    const favoritesStorage = localStorage.getItem('favoriteRecipes');\n    if (favoritesStorage && favoritesStorage.includes(id)) {\n      setFavorite(true);\n    }\n  }, [id, setFavorite]);\n\n  useEffect(() => {\n    verifyFavorite();\n  }, [verifyFavorite]);\n\n  const favoriteRecipe = () => {\n    const favoritesStorage = localStorage.getItem('favoriteRecipes');\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    const fave = {\n      id: recipe.idDrink || recipe.idMeal,\n      type: pathname.includes('/drinks') ? 'drink' : 'meal',\n      nationality: recipe.strArea || '',\n      category: recipe.strCategory || '',\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe.strDrink || recipe.strMeal,\n      image: recipe.strDrinkThumb || recipe.strMealThumb,\n    };\n    if (!favoritesStorage || !favoritesStorage.includes(id)) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favorites, fave]));\n      setFavorite(true);\n    } else {\n      const removeRecipe = favorites.filter((recipeFav) => recipeFav.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(removeRecipe));\n      setFavorite(false);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        data-testid=\"favorite-btn\"\n        onClick={ favoriteRecipe }\n        src={ favorite ? blackHeartIcon : whiteHeartIcon }\n      >\n        <img\n          src={ favorite ? blackHeartIcon : whiteHeartIcon }\n          alt=\"favorite\"\n        />\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}