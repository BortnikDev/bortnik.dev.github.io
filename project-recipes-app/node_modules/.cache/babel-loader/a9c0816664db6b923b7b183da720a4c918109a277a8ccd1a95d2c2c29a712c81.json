{"ast":null,"code":"var _jsxFileName = \"/Applications/Git/trybe github/trybe/projetos/projeto-app-receita/sd-030-a-project-recipes-app/src/components/ButtonShare.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport shareIcon from '../images/shareIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst copy = require('clipboard-copy');\nexport default function ButtonShare(_ref) {\n  _s();\n  let {\n    testid,\n    typeRecipe = '',\n    idRecipe = 0\n  } = _ref;\n  const [copied, setCopied] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n  const copyToClipboard = () => {\n    let url = '';\n    if (pathname.includes('/meals')) {\n      url = `http://localhost:3000/meals/${id}`;\n    } else if (pathname.includes('/drinks')) {\n      url = `http://localhost:3000/drinks/${id}`;\n    } else {\n      url = `http://localhost:3000/${typeRecipe}s/${Number(idRecipe)}`;\n    }\n    copy(url);\n    setCopied(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": testid,\n      onClick: copyToClipboard,\n      src: shareIcon,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: shareIcon,\n        alt: \"share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), copied && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        'margin-left': '10px'\n      },\n      children: \"Link copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ButtonShare, \"gEneYlp6unHPlw5fa2ol0HkiIok=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = ButtonShare;\nButtonShare.propTypes = {\n  testid: PropTypes.string.isRequired,\n  typeRecipe: PropTypes.string,\n  idRecipe: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"ButtonShare\");","map":{"version":3,"names":["PropTypes","React","useState","useLocation","useParams","shareIcon","copy","require","ButtonShare","testid","typeRecipe","idRecipe","copied","setCopied","pathname","id","copyToClipboard","url","includes","Number","propTypes","string","isRequired"],"sources":["/Applications/Git/trybe github/trybe/projetos/projeto-app-receita/sd-030-a-project-recipes-app/src/components/ButtonShare.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom/cjs/react-router-dom.min';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nexport default function ButtonShare({ testid, typeRecipe = '', idRecipe = 0 }) {\n  const [copied, setCopied] = useState(false);\n\n  const { pathname } = useLocation();\n  const { id } = useParams();\n\n  const copyToClipboard = () => {\n    let url = '';\n    if (pathname.includes('/meals')) {\n      url = `http://localhost:3000/meals/${id}`;\n    } else if (pathname.includes('/drinks')) {\n      url = `http://localhost:3000/drinks/${id}`;\n    } else {\n      url = `http://localhost:3000/${typeRecipe}s/${Number(idRecipe)}`;\n    }\n    copy(url);\n    setCopied(true);\n  };\n  return (\n    <div>\n      <button\n        data-testid={ testid }\n        onClick={ copyToClipboard }\n        src={ shareIcon }\n      >\n        <img\n          src={ shareIcon }\n          alt=\"share\"\n        />\n      </button>\n      { copied && (<span style={ { 'margin-left': '10px' } }>Link copied!</span>) }\n    </div>\n  );\n}\n\nButtonShare.propTypes = {\n  testid: PropTypes.string.isRequired,\n  typeRecipe: PropTypes.string,\n  idRecipe: PropTypes.string,\n};\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,2CAA2C;AAClF,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,MAAMC,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEtC,eAAe,SAASC,WAAW,OAA4C;EAAA;EAAA,IAA3C;IAAEC,MAAM;IAAEC,UAAU,GAAG,EAAE;IAAEC,QAAQ,GAAG;EAAE,CAAC;EAC3E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM;IAAEY;EAAS,CAAC,GAAGX,WAAW,EAAE;EAClC,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,EAAE;EAE1B,MAAMY,eAAe,GAAG,MAAM;IAC5B,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAIH,QAAQ,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC/BD,GAAG,GAAI,+BAA8BF,EAAG,EAAC;IAC3C,CAAC,MAAM,IAAID,QAAQ,CAACI,QAAQ,CAAC,SAAS,CAAC,EAAE;MACvCD,GAAG,GAAI,gCAA+BF,EAAG,EAAC;IAC5C,CAAC,MAAM;MACLE,GAAG,GAAI,yBAAwBP,UAAW,KAAIS,MAAM,CAACR,QAAQ,CAAE,EAAC;IAClE;IACAL,IAAI,CAACW,GAAG,CAAC;IACTJ,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,oBACE;IAAA,wBACE;MACE,eAAcJ,MAAQ;MACtB,OAAO,EAAGO,eAAiB;MAC3B,GAAG,EAAGX,SAAW;MAAA,uBAEjB;QACE,GAAG,EAAGA,SAAW;QACjB,GAAG,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IACX;MAAA;MAAA;MAAA;IAAA,QACK,EACPO,MAAM,iBAAK;MAAM,KAAK,EAAG;QAAE,aAAa,EAAE;MAAO,CAAG;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACvE;AAEV;AAAC,GAjCuBJ,WAAW;EAAA,QAGZL,WAAW,EACjBC,SAAS;AAAA;AAAA,KAJFI,WAAW;AAmCnCA,WAAW,CAACY,SAAS,GAAG;EACtBX,MAAM,EAAET,SAAS,CAACqB,MAAM,CAACC,UAAU;EACnCZ,UAAU,EAAEV,SAAS,CAACqB,MAAM;EAC5BV,QAAQ,EAAEX,SAAS,CAACqB;AACtB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}